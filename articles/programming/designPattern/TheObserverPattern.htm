<section id="articleTitle"></section>
<section id="articleBody">
	<script src="/articles/programming/designPattern/observer.js" type="text/javascript"></script>
	<link href="/webresources/bootstrap/css/docs.css" rel="stylesheet" type="text/css" />
	<script src="/webresources/bootstrap/js/prettify.js" type="text/javascript"></script>
	<link href="/webresources/css/prettify.css" rel="stylesheet" type="text/css" />
	<style type="text/css">
	#observersContainer{margin-top:10px;}
		#observersContainer input{
			margin:10px;
		}
		.lab{display:inline-block;margin-left: 20px;}
	</style>

	<div class="alert alert-block">
		本文代码出自&nbsp;&nbsp;
		<a href='http://addyosmani.com/resources/essentialjsdesignpatterns/book/#observerpatternjavascript' target="_blank">
			http://addyosmani.com/resources/essentialjsdesignpatterns/book/#observerpatternjavascript
		</a>
		<br/>
		稍作修改
	</div>

	<h4>案例</h4>

	<div class="bs-docs-example">
		<a id="addNewObserver" class="btn">添加一个观察者</a>
		<label class="checkbox lab">
			<input id="mainCheckbox" type="checkbox"/>
			被观察对象
		</label>
		<div id="observersContainer">观察者</div>
		<script type="text/javascript">
		var sub = $("#mainCheckbox").get(0);	//被观察对象
		$.extend(sub,new Subject());
		$(sub).on("click",function(){
			this.Notify($(this).prop("checked"));
		});

		$("#addNewObserver").on("click",function(){
			var ele = $("<input type='checkbox'/>").get(0);
			$.extend(ele,new Observer());

			ele.Update = function(value){
				$(this).prop("checked",value);
			}

			sub.AddObserver(ele);
			$("#observersContainer").append(ele);
		});
	</script>
	</div>

	<h6>The Observer Pattern</h6>
	<pre class="prettyprint linenums">
//观察者
function Observer() {
	this.Update = function() {};
}

//被观察对象内的观察者队列
function ObserverList() {
	this.observerList = [];
}

ObserverList.prototype.Add = function(obj) {
	return this.observerList.push(obj);
};

ObserverList.prototype.Empty = function() {
	this.observerList = [];
};

ObserverList.prototype.Count = function() {
	return this.observerList.length;
};

ObserverList.prototype.RemoverAt = function(index) {
	this.observerList.splice(index, 1);
};

ObserverList.prototype.Get = function(index) {
	return this.observerList[index];
};

ObserverList.prototype.Insert = function(obj, index) {
	this.observerList.splice(index, 0, obj);
};

ObserverList.prototype.IndexOf = function(obj) {
	while (i &lt; this.observerList.length) {
		if (this.observerList[i] === obj)
			return i;
		i++;
	}
	return -1;
};

//被观察对象

function Subject() {
	this.observers = new ObserverList();
}

Subject.prototype.AddObserver = function(observer) {
	this.observers.Add(observer);
};

Subject.prototype.RemoveObserver = function(observer) {
	this.observers.RemoverAt(this.observers.IndexOf(observer));
};

Subject.prototype.Notify = function(context) {
	var observerCount = this.observers.Count();
	for (var i = 0; i &lt; observerCount; i++) {
		this.observers.Get(i).Update(context);
	}
};
		</pre>

	<h6>html</h6>
	<pre class="prettyprint linenums">
&lt;a id="addNewObserver" class="btn"&gt;添加一个观察者&lt;/a&gt;
&lt;label class="checkbox lab"&gt;&lt;input id="mainCheckbox" type="checkbox"/&gt;被观察对象&lt;/label>
&lt;div id="observersContainer"&gt;观察者&lt;/div&gt;
</pre>
	<h6>script</h6>
	<pre class="prettyprint linenums">
var sub = $("#mainCheckbox").get(0);	//被观察对象
$.extend(sub,new Subject());
$(sub).on("click",function(){
	this.Notify($(this).prop("checked"));
});

$("#addNewObserver").on("click",function(){
	var ele = $("&lt;input type='checkbox'/&gt;").get(0);
	$.extend(ele,new Observer());

	ele.Update = function(value){
		$(this).prop("checked",value);
	}

	sub.AddObserver(ele);
	$("#observersContainer").append(ele);
});

	</pre>

</section>
<script type="text/javascript">
	(function(){
		prettyPrint();
	})();
	(function(){
		$(".tipInfo").tooltip();
	})();
</script>